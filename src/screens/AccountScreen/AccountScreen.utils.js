import {fetchData} from "../../../axios";

export async function fetchAccounts () {
    var npsScore = JSON.stringify({"response":{"location":"request","mimeType":"application/json"},"requests":[{"name":"accountList","pipeline":[{"source":{"events":{"appId":"expandAppIds(\"*\")","blacklist":"apply"},"timeSeries":{"period":"dayRange","first":1631160000000,"count":30}}},{"identified":"visitorId"},{"group":{"group":["accountId"]}},{"bulkExpand":{"account":{"account":"accountId"}}},{"eval":{"account_auto_lastvisit":"account.auto.lastvisit"}},{"merge":{"fields":["accountId"],"mappings":{"daysActive":"daysActive"},"pipeline":[{"source":{"events":{"blacklist":"apply","appId":"expandAppIds(\"*\")"},"timeSeries":{"period":"dayRange","first":1631160000000,"count":30}}},{"identified":"visitorId"},{"group":{"group":["accountId"],"fields":[{"daysActive":{"count":"day"}}]}}]}},{"merge":{"fields":["accountId"],"mappings":{"eventCount":"eventCount"},"pipeline":[{"source":{"events":{"blacklist":"apply","appId":"expandAppIds(\"*\")"},"timeSeries":{"period":"dayRange","first":1631160000000,"count":30}}},{"identified":"visitorId"},{"group":{"group":["accountId"],"fields":[{"eventCount":{"sum":"numEvents"}}]}}]}},{"select":{"accountId":"accountId","account_auto_lastvisit":"account_auto_lastvisit","daysActive":"if(isNull(daysActive), 0, daysActive)","eventCount":"if(isNull(eventCount), 0, eventCount)"}},{"limit":5000}],"requestId":"accountList-rId-a028412a-2375-4fce-9c6d-d30f7dec1f7d"}]});
    return fetchData(npsScore);
}
